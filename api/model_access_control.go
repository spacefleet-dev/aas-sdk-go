/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AccessControl struct for AccessControl
type AccessControl struct {
	AccessPermissionRule            []AccessPermissionRule `json:"accessPermissionRule,omitempty"`
	DefaultEnvironmentAttributes    *Reference             `json:"defaultEnvironmentAttributes,omitempty"`
	DefaultPermissions              *Reference             `json:"defaultPermissions,omitempty"`
	DefaultSubjectAttributes        *Reference             `json:"defaultSubjectAttributes,omitempty"`
	SelectableEnvironmentAttributes *Reference             `json:"selectableEnvironmentAttributes,omitempty"`
	SelectablePermissions           *Reference             `json:"selectablePermissions,omitempty"`
	SelectableSubjectAttributes     *Reference             `json:"selectableSubjectAttributes,omitempty"`
}

// NewAccessControl instantiates a new AccessControl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessControl() *AccessControl {
	this := AccessControl{}
	return &this
}

// NewAccessControlWithDefaults instantiates a new AccessControl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessControlWithDefaults() *AccessControl {
	this := AccessControl{}
	return &this
}

// GetAccessPermissionRule returns the AccessPermissionRule field value if set, zero value otherwise.
func (o *AccessControl) GetAccessPermissionRule() []AccessPermissionRule {
	if o == nil || o.AccessPermissionRule == nil {
		var ret []AccessPermissionRule
		return ret
	}
	return o.AccessPermissionRule
}

// GetAccessPermissionRuleOk returns a tuple with the AccessPermissionRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessControl) GetAccessPermissionRuleOk() ([]AccessPermissionRule, bool) {
	if o == nil || o.AccessPermissionRule == nil {
		return nil, false
	}
	return o.AccessPermissionRule, true
}

// HasAccessPermissionRule returns a boolean if a field has been set.
func (o *AccessControl) HasAccessPermissionRule() bool {
	if o != nil && o.AccessPermissionRule != nil {
		return true
	}

	return false
}

// SetAccessPermissionRule gets a reference to the given []AccessPermissionRule and assigns it to the AccessPermissionRule field.
func (o *AccessControl) SetAccessPermissionRule(v []AccessPermissionRule) {
	o.AccessPermissionRule = v
}

// GetDefaultEnvironmentAttributes returns the DefaultEnvironmentAttributes field value if set, zero value otherwise.
func (o *AccessControl) GetDefaultEnvironmentAttributes() Reference {
	if o == nil || o.DefaultEnvironmentAttributes == nil {
		var ret Reference
		return ret
	}
	return *o.DefaultEnvironmentAttributes
}

// GetDefaultEnvironmentAttributesOk returns a tuple with the DefaultEnvironmentAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessControl) GetDefaultEnvironmentAttributesOk() (*Reference, bool) {
	if o == nil || o.DefaultEnvironmentAttributes == nil {
		return nil, false
	}
	return o.DefaultEnvironmentAttributes, true
}

// HasDefaultEnvironmentAttributes returns a boolean if a field has been set.
func (o *AccessControl) HasDefaultEnvironmentAttributes() bool {
	if o != nil && o.DefaultEnvironmentAttributes != nil {
		return true
	}

	return false
}

// SetDefaultEnvironmentAttributes gets a reference to the given Reference and assigns it to the DefaultEnvironmentAttributes field.
func (o *AccessControl) SetDefaultEnvironmentAttributes(v Reference) {
	o.DefaultEnvironmentAttributes = &v
}

// GetDefaultPermissions returns the DefaultPermissions field value if set, zero value otherwise.
func (o *AccessControl) GetDefaultPermissions() Reference {
	if o == nil || o.DefaultPermissions == nil {
		var ret Reference
		return ret
	}
	return *o.DefaultPermissions
}

// GetDefaultPermissionsOk returns a tuple with the DefaultPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessControl) GetDefaultPermissionsOk() (*Reference, bool) {
	if o == nil || o.DefaultPermissions == nil {
		return nil, false
	}
	return o.DefaultPermissions, true
}

// HasDefaultPermissions returns a boolean if a field has been set.
func (o *AccessControl) HasDefaultPermissions() bool {
	if o != nil && o.DefaultPermissions != nil {
		return true
	}

	return false
}

// SetDefaultPermissions gets a reference to the given Reference and assigns it to the DefaultPermissions field.
func (o *AccessControl) SetDefaultPermissions(v Reference) {
	o.DefaultPermissions = &v
}

// GetDefaultSubjectAttributes returns the DefaultSubjectAttributes field value if set, zero value otherwise.
func (o *AccessControl) GetDefaultSubjectAttributes() Reference {
	if o == nil || o.DefaultSubjectAttributes == nil {
		var ret Reference
		return ret
	}
	return *o.DefaultSubjectAttributes
}

// GetDefaultSubjectAttributesOk returns a tuple with the DefaultSubjectAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessControl) GetDefaultSubjectAttributesOk() (*Reference, bool) {
	if o == nil || o.DefaultSubjectAttributes == nil {
		return nil, false
	}
	return o.DefaultSubjectAttributes, true
}

// HasDefaultSubjectAttributes returns a boolean if a field has been set.
func (o *AccessControl) HasDefaultSubjectAttributes() bool {
	if o != nil && o.DefaultSubjectAttributes != nil {
		return true
	}

	return false
}

// SetDefaultSubjectAttributes gets a reference to the given Reference and assigns it to the DefaultSubjectAttributes field.
func (o *AccessControl) SetDefaultSubjectAttributes(v Reference) {
	o.DefaultSubjectAttributes = &v
}

// GetSelectableEnvironmentAttributes returns the SelectableEnvironmentAttributes field value if set, zero value otherwise.
func (o *AccessControl) GetSelectableEnvironmentAttributes() Reference {
	if o == nil || o.SelectableEnvironmentAttributes == nil {
		var ret Reference
		return ret
	}
	return *o.SelectableEnvironmentAttributes
}

// GetSelectableEnvironmentAttributesOk returns a tuple with the SelectableEnvironmentAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessControl) GetSelectableEnvironmentAttributesOk() (*Reference, bool) {
	if o == nil || o.SelectableEnvironmentAttributes == nil {
		return nil, false
	}
	return o.SelectableEnvironmentAttributes, true
}

// HasSelectableEnvironmentAttributes returns a boolean if a field has been set.
func (o *AccessControl) HasSelectableEnvironmentAttributes() bool {
	if o != nil && o.SelectableEnvironmentAttributes != nil {
		return true
	}

	return false
}

// SetSelectableEnvironmentAttributes gets a reference to the given Reference and assigns it to the SelectableEnvironmentAttributes field.
func (o *AccessControl) SetSelectableEnvironmentAttributes(v Reference) {
	o.SelectableEnvironmentAttributes = &v
}

// GetSelectablePermissions returns the SelectablePermissions field value if set, zero value otherwise.
func (o *AccessControl) GetSelectablePermissions() Reference {
	if o == nil || o.SelectablePermissions == nil {
		var ret Reference
		return ret
	}
	return *o.SelectablePermissions
}

// GetSelectablePermissionsOk returns a tuple with the SelectablePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessControl) GetSelectablePermissionsOk() (*Reference, bool) {
	if o == nil || o.SelectablePermissions == nil {
		return nil, false
	}
	return o.SelectablePermissions, true
}

// HasSelectablePermissions returns a boolean if a field has been set.
func (o *AccessControl) HasSelectablePermissions() bool {
	if o != nil && o.SelectablePermissions != nil {
		return true
	}

	return false
}

// SetSelectablePermissions gets a reference to the given Reference and assigns it to the SelectablePermissions field.
func (o *AccessControl) SetSelectablePermissions(v Reference) {
	o.SelectablePermissions = &v
}

// GetSelectableSubjectAttributes returns the SelectableSubjectAttributes field value if set, zero value otherwise.
func (o *AccessControl) GetSelectableSubjectAttributes() Reference {
	if o == nil || o.SelectableSubjectAttributes == nil {
		var ret Reference
		return ret
	}
	return *o.SelectableSubjectAttributes
}

// GetSelectableSubjectAttributesOk returns a tuple with the SelectableSubjectAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessControl) GetSelectableSubjectAttributesOk() (*Reference, bool) {
	if o == nil || o.SelectableSubjectAttributes == nil {
		return nil, false
	}
	return o.SelectableSubjectAttributes, true
}

// HasSelectableSubjectAttributes returns a boolean if a field has been set.
func (o *AccessControl) HasSelectableSubjectAttributes() bool {
	if o != nil && o.SelectableSubjectAttributes != nil {
		return true
	}

	return false
}

// SetSelectableSubjectAttributes gets a reference to the given Reference and assigns it to the SelectableSubjectAttributes field.
func (o *AccessControl) SetSelectableSubjectAttributes(v Reference) {
	o.SelectableSubjectAttributes = &v
}

func (o AccessControl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessPermissionRule != nil {
		toSerialize["accessPermissionRule"] = o.AccessPermissionRule
	}
	if o.DefaultEnvironmentAttributes != nil {
		toSerialize["defaultEnvironmentAttributes"] = o.DefaultEnvironmentAttributes
	}
	if o.DefaultPermissions != nil {
		toSerialize["defaultPermissions"] = o.DefaultPermissions
	}
	if o.DefaultSubjectAttributes != nil {
		toSerialize["defaultSubjectAttributes"] = o.DefaultSubjectAttributes
	}
	if o.SelectableEnvironmentAttributes != nil {
		toSerialize["selectableEnvironmentAttributes"] = o.SelectableEnvironmentAttributes
	}
	if o.SelectablePermissions != nil {
		toSerialize["selectablePermissions"] = o.SelectablePermissions
	}
	if o.SelectableSubjectAttributes != nil {
		toSerialize["selectableSubjectAttributes"] = o.SelectableSubjectAttributes
	}
	return json.Marshal(toSerialize)
}

type NullableAccessControl struct {
	value *AccessControl
	isSet bool
}

func (v NullableAccessControl) Get() *AccessControl {
	return v.value
}

func (v *NullableAccessControl) Set(val *AccessControl) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessControl) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessControl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessControl(val *AccessControl) *NullableAccessControl {
	return &NullableAccessControl{value: val, isSet: true}
}

func (v NullableAccessControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessControl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
