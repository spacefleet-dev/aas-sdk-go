//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AdministrativeInformationAllOf struct for AdministrativeInformationAllOf
type AdministrativeInformationAllOf struct {
	Revision *string `json:"revision,omitempty"`
	Version  *string `json:"version,omitempty"`
}

// NewAdministrativeInformationAllOf instantiates a new AdministrativeInformationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdministrativeInformationAllOf() *AdministrativeInformationAllOf {
	this := AdministrativeInformationAllOf{}
	return &this
}

// NewAdministrativeInformationAllOfWithDefaults instantiates a new AdministrativeInformationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdministrativeInformationAllOfWithDefaults() *AdministrativeInformationAllOf {
	this := AdministrativeInformationAllOf{}
	return &this
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *AdministrativeInformationAllOf) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministrativeInformationAllOf) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *AdministrativeInformationAllOf) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *AdministrativeInformationAllOf) SetRevision(v string) {
	o.Revision = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdministrativeInformationAllOf) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministrativeInformationAllOf) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdministrativeInformationAllOf) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdministrativeInformationAllOf) SetVersion(v string) {
	o.Version = &v
}

func (o AdministrativeInformationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableAdministrativeInformationAllOf struct {
	value *AdministrativeInformationAllOf
	isSet bool
}

func (v NullableAdministrativeInformationAllOf) Get() *AdministrativeInformationAllOf {
	return v.value
}

func (v *NullableAdministrativeInformationAllOf) Set(val *AdministrativeInformationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAdministrativeInformationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAdministrativeInformationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdministrativeInformationAllOf(val *AdministrativeInformationAllOf) *NullableAdministrativeInformationAllOf {
	return &NullableAdministrativeInformationAllOf{value: val, isSet: true}
}

func (v NullableAdministrativeInformationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdministrativeInformationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
