/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AssetAdministrationShell struct for AssetAdministrationShell
type AssetAdministrationShell struct {
	Extensions                 []Extension                 `json:"extensions,omitempty"`
	Category                   *string                     `json:"category,omitempty"`
	Checksum                   *string                     `json:"checksum,omitempty"`
	Description                []LangString                `json:"description,omitempty"`
	DisplayName                []LangString                `json:"displayName,omitempty"`
	IdShort                    *string                     `json:"idShort,omitempty"`
	ModelType                  ModelType                   `json:"modelType"`
	Administration             *AdministrativeInformation  `json:"administration,omitempty"`
	Identification             Identifier                  `json:"identification"`
	EmbeddedDataSpecifications []EmbeddedDataSpecification `json:"embeddedDataSpecifications,omitempty"`
	Asset                      *Reference                  `json:"asset,omitempty"`
	AssetInformation           AssetInformation            `json:"assetInformation"`
	DerivedFrom                *Reference                  `json:"derivedFrom,omitempty"`
	Submodels                  []Reference                 `json:"submodels,omitempty"`
}

// NewAssetAdministrationShell instantiates a new AssetAdministrationShell object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetAdministrationShell(modelType ModelType, identification Identifier, assetInformation AssetInformation) *AssetAdministrationShell {
	this := AssetAdministrationShell{}
	this.ModelType = modelType
	this.Identification = identification
	this.AssetInformation = assetInformation
	return &this
}

// NewAssetAdministrationShellWithDefaults instantiates a new AssetAdministrationShell object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetAdministrationShellWithDefaults() *AssetAdministrationShell {
	this := AssetAdministrationShell{}
	return &this
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetExtensions() []Extension {
	if o == nil || o.Extensions == nil {
		var ret []Extension
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetExtensionsOk() ([]Extension, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []Extension and assigns it to the Extensions field.
func (o *AssetAdministrationShell) SetExtensions(v []Extension) {
	o.Extensions = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AssetAdministrationShell) SetCategory(v string) {
	o.Category = &v
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetChecksum() string {
	if o == nil || o.Checksum == nil {
		var ret string
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetChecksumOk() (*string, bool) {
	if o == nil || o.Checksum == nil {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasChecksum() bool {
	if o != nil && o.Checksum != nil {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given string and assigns it to the Checksum field.
func (o *AssetAdministrationShell) SetChecksum(v string) {
	o.Checksum = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetDescription() []LangString {
	if o == nil || o.Description == nil {
		var ret []LangString
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetDescriptionOk() ([]LangString, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given []LangString and assigns it to the Description field.
func (o *AssetAdministrationShell) SetDescription(v []LangString) {
	o.Description = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetDisplayName() []LangString {
	if o == nil || o.DisplayName == nil {
		var ret []LangString
		return ret
	}
	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetDisplayNameOk() ([]LangString, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given []LangString and assigns it to the DisplayName field.
func (o *AssetAdministrationShell) SetDisplayName(v []LangString) {
	o.DisplayName = v
}

// GetIdShort returns the IdShort field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetIdShort() string {
	if o == nil || o.IdShort == nil {
		var ret string
		return ret
	}
	return *o.IdShort
}

// GetIdShortOk returns a tuple with the IdShort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetIdShortOk() (*string, bool) {
	if o == nil || o.IdShort == nil {
		return nil, false
	}
	return o.IdShort, true
}

// HasIdShort returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasIdShort() bool {
	if o != nil && o.IdShort != nil {
		return true
	}

	return false
}

// SetIdShort gets a reference to the given string and assigns it to the IdShort field.
func (o *AssetAdministrationShell) SetIdShort(v string) {
	o.IdShort = &v
}

// GetModelType returns the ModelType field value
func (o *AssetAdministrationShell) GetModelType() ModelType {
	if o == nil {
		var ret ModelType
		return ret
	}

	return o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetModelTypeOk() (*ModelType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelType, true
}

// SetModelType sets field value
func (o *AssetAdministrationShell) SetModelType(v ModelType) {
	o.ModelType = v
}

// GetAdministration returns the Administration field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetAdministration() AdministrativeInformation {
	if o == nil || o.Administration == nil {
		var ret AdministrativeInformation
		return ret
	}
	return *o.Administration
}

// GetAdministrationOk returns a tuple with the Administration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetAdministrationOk() (*AdministrativeInformation, bool) {
	if o == nil || o.Administration == nil {
		return nil, false
	}
	return o.Administration, true
}

// HasAdministration returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasAdministration() bool {
	if o != nil && o.Administration != nil {
		return true
	}

	return false
}

// SetAdministration gets a reference to the given AdministrativeInformation and assigns it to the Administration field.
func (o *AssetAdministrationShell) SetAdministration(v AdministrativeInformation) {
	o.Administration = &v
}

// GetIdentification returns the Identification field value
func (o *AssetAdministrationShell) GetIdentification() Identifier {
	if o == nil {
		var ret Identifier
		return ret
	}

	return o.Identification
}

// GetIdentificationOk returns a tuple with the Identification field value
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetIdentificationOk() (*Identifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identification, true
}

// SetIdentification sets field value
func (o *AssetAdministrationShell) SetIdentification(v Identifier) {
	o.Identification = v
}

// GetEmbeddedDataSpecifications returns the EmbeddedDataSpecifications field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetEmbeddedDataSpecifications() []EmbeddedDataSpecification {
	if o == nil || o.EmbeddedDataSpecifications == nil {
		var ret []EmbeddedDataSpecification
		return ret
	}
	return o.EmbeddedDataSpecifications
}

// GetEmbeddedDataSpecificationsOk returns a tuple with the EmbeddedDataSpecifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetEmbeddedDataSpecificationsOk() ([]EmbeddedDataSpecification, bool) {
	if o == nil || o.EmbeddedDataSpecifications == nil {
		return nil, false
	}
	return o.EmbeddedDataSpecifications, true
}

// HasEmbeddedDataSpecifications returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasEmbeddedDataSpecifications() bool {
	if o != nil && o.EmbeddedDataSpecifications != nil {
		return true
	}

	return false
}

// SetEmbeddedDataSpecifications gets a reference to the given []EmbeddedDataSpecification and assigns it to the EmbeddedDataSpecifications field.
func (o *AssetAdministrationShell) SetEmbeddedDataSpecifications(v []EmbeddedDataSpecification) {
	o.EmbeddedDataSpecifications = v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetAsset() Reference {
	if o == nil || o.Asset == nil {
		var ret Reference
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetAssetOk() (*Reference, bool) {
	if o == nil || o.Asset == nil {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasAsset() bool {
	if o != nil && o.Asset != nil {
		return true
	}

	return false
}

// SetAsset gets a reference to the given Reference and assigns it to the Asset field.
func (o *AssetAdministrationShell) SetAsset(v Reference) {
	o.Asset = &v
}

// GetAssetInformation returns the AssetInformation field value
func (o *AssetAdministrationShell) GetAssetInformation() AssetInformation {
	if o == nil {
		var ret AssetInformation
		return ret
	}

	return o.AssetInformation
}

// GetAssetInformationOk returns a tuple with the AssetInformation field value
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetAssetInformationOk() (*AssetInformation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetInformation, true
}

// SetAssetInformation sets field value
func (o *AssetAdministrationShell) SetAssetInformation(v AssetInformation) {
	o.AssetInformation = v
}

// GetDerivedFrom returns the DerivedFrom field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetDerivedFrom() Reference {
	if o == nil || o.DerivedFrom == nil {
		var ret Reference
		return ret
	}
	return *o.DerivedFrom
}

// GetDerivedFromOk returns a tuple with the DerivedFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetDerivedFromOk() (*Reference, bool) {
	if o == nil || o.DerivedFrom == nil {
		return nil, false
	}
	return o.DerivedFrom, true
}

// HasDerivedFrom returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasDerivedFrom() bool {
	if o != nil && o.DerivedFrom != nil {
		return true
	}

	return false
}

// SetDerivedFrom gets a reference to the given Reference and assigns it to the DerivedFrom field.
func (o *AssetAdministrationShell) SetDerivedFrom(v Reference) {
	o.DerivedFrom = &v
}

// GetSubmodels returns the Submodels field value if set, zero value otherwise.
func (o *AssetAdministrationShell) GetSubmodels() []Reference {
	if o == nil || o.Submodels == nil {
		var ret []Reference
		return ret
	}
	return o.Submodels
}

// GetSubmodelsOk returns a tuple with the Submodels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShell) GetSubmodelsOk() ([]Reference, bool) {
	if o == nil || o.Submodels == nil {
		return nil, false
	}
	return o.Submodels, true
}

// HasSubmodels returns a boolean if a field has been set.
func (o *AssetAdministrationShell) HasSubmodels() bool {
	if o != nil && o.Submodels != nil {
		return true
	}

	return false
}

// SetSubmodels gets a reference to the given []Reference and assigns it to the Submodels field.
func (o *AssetAdministrationShell) SetSubmodels(v []Reference) {
	o.Submodels = v
}

func (o AssetAdministrationShell) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Checksum != nil {
		toSerialize["checksum"] = o.Checksum
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.IdShort != nil {
		toSerialize["idShort"] = o.IdShort
	}
	if true {
		toSerialize["modelType"] = o.ModelType
	}
	if o.Administration != nil {
		toSerialize["administration"] = o.Administration
	}
	if true {
		toSerialize["identification"] = o.Identification
	}
	if o.EmbeddedDataSpecifications != nil {
		toSerialize["embeddedDataSpecifications"] = o.EmbeddedDataSpecifications
	}
	if o.Asset != nil {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["assetInformation"] = o.AssetInformation
	}
	if o.DerivedFrom != nil {
		toSerialize["derivedFrom"] = o.DerivedFrom
	}
	if o.Submodels != nil {
		toSerialize["submodels"] = o.Submodels
	}
	return json.Marshal(toSerialize)
}

type NullableAssetAdministrationShell struct {
	value *AssetAdministrationShell
	isSet bool
}

func (v NullableAssetAdministrationShell) Get() *AssetAdministrationShell {
	return v.value
}

func (v *NullableAssetAdministrationShell) Set(val *AssetAdministrationShell) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetAdministrationShell) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetAdministrationShell) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetAdministrationShell(val *AssetAdministrationShell) *NullableAssetAdministrationShell {
	return &NullableAssetAdministrationShell{value: val, isSet: true}
}

func (v NullableAssetAdministrationShell) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetAdministrationShell) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
