/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AssetAdministrationShellAllOf struct for AssetAdministrationShellAllOf
type AssetAdministrationShellAllOf struct {
	Asset            *Reference       `json:"asset,omitempty"`
	AssetInformation AssetInformation `json:"assetInformation"`
	DerivedFrom      *Reference       `json:"derivedFrom,omitempty"`
	Submodels        []Reference      `json:"submodels,omitempty"`
}

// NewAssetAdministrationShellAllOf instantiates a new AssetAdministrationShellAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetAdministrationShellAllOf(assetInformation AssetInformation) *AssetAdministrationShellAllOf {
	this := AssetAdministrationShellAllOf{}
	this.AssetInformation = assetInformation
	return &this
}

// NewAssetAdministrationShellAllOfWithDefaults instantiates a new AssetAdministrationShellAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetAdministrationShellAllOfWithDefaults() *AssetAdministrationShellAllOf {
	this := AssetAdministrationShellAllOf{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *AssetAdministrationShellAllOf) GetAsset() Reference {
	if o == nil || o.Asset == nil {
		var ret Reference
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShellAllOf) GetAssetOk() (*Reference, bool) {
	if o == nil || o.Asset == nil {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *AssetAdministrationShellAllOf) HasAsset() bool {
	if o != nil && o.Asset != nil {
		return true
	}

	return false
}

// SetAsset gets a reference to the given Reference and assigns it to the Asset field.
func (o *AssetAdministrationShellAllOf) SetAsset(v Reference) {
	o.Asset = &v
}

// GetAssetInformation returns the AssetInformation field value
func (o *AssetAdministrationShellAllOf) GetAssetInformation() AssetInformation {
	if o == nil {
		var ret AssetInformation
		return ret
	}

	return o.AssetInformation
}

// GetAssetInformationOk returns a tuple with the AssetInformation field value
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShellAllOf) GetAssetInformationOk() (*AssetInformation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetInformation, true
}

// SetAssetInformation sets field value
func (o *AssetAdministrationShellAllOf) SetAssetInformation(v AssetInformation) {
	o.AssetInformation = v
}

// GetDerivedFrom returns the DerivedFrom field value if set, zero value otherwise.
func (o *AssetAdministrationShellAllOf) GetDerivedFrom() Reference {
	if o == nil || o.DerivedFrom == nil {
		var ret Reference
		return ret
	}
	return *o.DerivedFrom
}

// GetDerivedFromOk returns a tuple with the DerivedFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShellAllOf) GetDerivedFromOk() (*Reference, bool) {
	if o == nil || o.DerivedFrom == nil {
		return nil, false
	}
	return o.DerivedFrom, true
}

// HasDerivedFrom returns a boolean if a field has been set.
func (o *AssetAdministrationShellAllOf) HasDerivedFrom() bool {
	if o != nil && o.DerivedFrom != nil {
		return true
	}

	return false
}

// SetDerivedFrom gets a reference to the given Reference and assigns it to the DerivedFrom field.
func (o *AssetAdministrationShellAllOf) SetDerivedFrom(v Reference) {
	o.DerivedFrom = &v
}

// GetSubmodels returns the Submodels field value if set, zero value otherwise.
func (o *AssetAdministrationShellAllOf) GetSubmodels() []Reference {
	if o == nil || o.Submodels == nil {
		var ret []Reference
		return ret
	}
	return o.Submodels
}

// GetSubmodelsOk returns a tuple with the Submodels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetAdministrationShellAllOf) GetSubmodelsOk() ([]Reference, bool) {
	if o == nil || o.Submodels == nil {
		return nil, false
	}
	return o.Submodels, true
}

// HasSubmodels returns a boolean if a field has been set.
func (o *AssetAdministrationShellAllOf) HasSubmodels() bool {
	if o != nil && o.Submodels != nil {
		return true
	}

	return false
}

// SetSubmodels gets a reference to the given []Reference and assigns it to the Submodels field.
func (o *AssetAdministrationShellAllOf) SetSubmodels(v []Reference) {
	o.Submodels = v
}

func (o AssetAdministrationShellAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Asset != nil {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["assetInformation"] = o.AssetInformation
	}
	if o.DerivedFrom != nil {
		toSerialize["derivedFrom"] = o.DerivedFrom
	}
	if o.Submodels != nil {
		toSerialize["submodels"] = o.Submodels
	}
	return json.Marshal(toSerialize)
}

type NullableAssetAdministrationShellAllOf struct {
	value *AssetAdministrationShellAllOf
	isSet bool
}

func (v NullableAssetAdministrationShellAllOf) Get() *AssetAdministrationShellAllOf {
	return v.value
}

func (v *NullableAssetAdministrationShellAllOf) Set(val *AssetAdministrationShellAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetAdministrationShellAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetAdministrationShellAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetAdministrationShellAllOf(val *AssetAdministrationShellAllOf) *NullableAssetAdministrationShellAllOf {
	return &NullableAssetAdministrationShellAllOf{value: val, isSet: true}
}

func (v NullableAssetAdministrationShellAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetAdministrationShellAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
