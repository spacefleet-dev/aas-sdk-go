//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ConceptDescription struct for ConceptDescription
type ConceptDescription struct {
	Extensions                 []Extension                 `json:"extensions,omitempty"`
	Category                   *string                     `json:"category,omitempty"`
	Checksum                   *string                     `json:"checksum,omitempty"`
	Description                []LangString                `json:"description,omitempty"`
	DisplayName                []LangString                `json:"displayName,omitempty"`
	IdShort                    *string                     `json:"idShort,omitempty"`
	ModelType                  ModelType                   `json:"modelType"`
	Administration             *AdministrativeInformation  `json:"administration,omitempty"`
	Identification             Identifier                  `json:"identification"`
	EmbeddedDataSpecifications []EmbeddedDataSpecification `json:"embeddedDataSpecifications,omitempty"`
	IsCaseOf                   []Reference                 `json:"isCaseOf,omitempty"`
}

// NewConceptDescription instantiates a new ConceptDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConceptDescription(modelType ModelType, identification Identifier) *ConceptDescription {
	this := ConceptDescription{}
	this.ModelType = modelType
	this.Identification = identification
	return &this
}

// NewConceptDescriptionWithDefaults instantiates a new ConceptDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConceptDescriptionWithDefaults() *ConceptDescription {
	this := ConceptDescription{}
	return &this
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *ConceptDescription) GetExtensions() []Extension {
	if o == nil || o.Extensions == nil {
		var ret []Extension
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetExtensionsOk() ([]Extension, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *ConceptDescription) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []Extension and assigns it to the Extensions field.
func (o *ConceptDescription) SetExtensions(v []Extension) {
	o.Extensions = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ConceptDescription) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ConceptDescription) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ConceptDescription) SetCategory(v string) {
	o.Category = &v
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *ConceptDescription) GetChecksum() string {
	if o == nil || o.Checksum == nil {
		var ret string
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetChecksumOk() (*string, bool) {
	if o == nil || o.Checksum == nil {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *ConceptDescription) HasChecksum() bool {
	if o != nil && o.Checksum != nil {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given string and assigns it to the Checksum field.
func (o *ConceptDescription) SetChecksum(v string) {
	o.Checksum = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConceptDescription) GetDescription() []LangString {
	if o == nil || o.Description == nil {
		var ret []LangString
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetDescriptionOk() ([]LangString, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConceptDescription) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given []LangString and assigns it to the Description field.
func (o *ConceptDescription) SetDescription(v []LangString) {
	o.Description = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ConceptDescription) GetDisplayName() []LangString {
	if o == nil || o.DisplayName == nil {
		var ret []LangString
		return ret
	}
	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetDisplayNameOk() ([]LangString, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ConceptDescription) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given []LangString and assigns it to the DisplayName field.
func (o *ConceptDescription) SetDisplayName(v []LangString) {
	o.DisplayName = v
}

// GetIdShort returns the IdShort field value if set, zero value otherwise.
func (o *ConceptDescription) GetIdShort() string {
	if o == nil || o.IdShort == nil {
		var ret string
		return ret
	}
	return *o.IdShort
}

// GetIdShortOk returns a tuple with the IdShort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetIdShortOk() (*string, bool) {
	if o == nil || o.IdShort == nil {
		return nil, false
	}
	return o.IdShort, true
}

// HasIdShort returns a boolean if a field has been set.
func (o *ConceptDescription) HasIdShort() bool {
	if o != nil && o.IdShort != nil {
		return true
	}

	return false
}

// SetIdShort gets a reference to the given string and assigns it to the IdShort field.
func (o *ConceptDescription) SetIdShort(v string) {
	o.IdShort = &v
}

// GetModelType returns the ModelType field value
func (o *ConceptDescription) GetModelType() ModelType {
	if o == nil {
		var ret ModelType
		return ret
	}

	return o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetModelTypeOk() (*ModelType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelType, true
}

// SetModelType sets field value
func (o *ConceptDescription) SetModelType(v ModelType) {
	o.ModelType = v
}

// GetAdministration returns the Administration field value if set, zero value otherwise.
func (o *ConceptDescription) GetAdministration() AdministrativeInformation {
	if o == nil || o.Administration == nil {
		var ret AdministrativeInformation
		return ret
	}
	return *o.Administration
}

// GetAdministrationOk returns a tuple with the Administration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetAdministrationOk() (*AdministrativeInformation, bool) {
	if o == nil || o.Administration == nil {
		return nil, false
	}
	return o.Administration, true
}

// HasAdministration returns a boolean if a field has been set.
func (o *ConceptDescription) HasAdministration() bool {
	if o != nil && o.Administration != nil {
		return true
	}

	return false
}

// SetAdministration gets a reference to the given AdministrativeInformation and assigns it to the Administration field.
func (o *ConceptDescription) SetAdministration(v AdministrativeInformation) {
	o.Administration = &v
}

// GetIdentification returns the Identification field value
func (o *ConceptDescription) GetIdentification() Identifier {
	if o == nil {
		var ret Identifier
		return ret
	}

	return o.Identification
}

// GetIdentificationOk returns a tuple with the Identification field value
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetIdentificationOk() (*Identifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identification, true
}

// SetIdentification sets field value
func (o *ConceptDescription) SetIdentification(v Identifier) {
	o.Identification = v
}

// GetEmbeddedDataSpecifications returns the EmbeddedDataSpecifications field value if set, zero value otherwise.
func (o *ConceptDescription) GetEmbeddedDataSpecifications() []EmbeddedDataSpecification {
	if o == nil || o.EmbeddedDataSpecifications == nil {
		var ret []EmbeddedDataSpecification
		return ret
	}
	return o.EmbeddedDataSpecifications
}

// GetEmbeddedDataSpecificationsOk returns a tuple with the EmbeddedDataSpecifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetEmbeddedDataSpecificationsOk() ([]EmbeddedDataSpecification, bool) {
	if o == nil || o.EmbeddedDataSpecifications == nil {
		return nil, false
	}
	return o.EmbeddedDataSpecifications, true
}

// HasEmbeddedDataSpecifications returns a boolean if a field has been set.
func (o *ConceptDescription) HasEmbeddedDataSpecifications() bool {
	if o != nil && o.EmbeddedDataSpecifications != nil {
		return true
	}

	return false
}

// SetEmbeddedDataSpecifications gets a reference to the given []EmbeddedDataSpecification and assigns it to the EmbeddedDataSpecifications field.
func (o *ConceptDescription) SetEmbeddedDataSpecifications(v []EmbeddedDataSpecification) {
	o.EmbeddedDataSpecifications = v
}

// GetIsCaseOf returns the IsCaseOf field value if set, zero value otherwise.
func (o *ConceptDescription) GetIsCaseOf() []Reference {
	if o == nil || o.IsCaseOf == nil {
		var ret []Reference
		return ret
	}
	return o.IsCaseOf
}

// GetIsCaseOfOk returns a tuple with the IsCaseOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDescription) GetIsCaseOfOk() ([]Reference, bool) {
	if o == nil || o.IsCaseOf == nil {
		return nil, false
	}
	return o.IsCaseOf, true
}

// HasIsCaseOf returns a boolean if a field has been set.
func (o *ConceptDescription) HasIsCaseOf() bool {
	if o != nil && o.IsCaseOf != nil {
		return true
	}

	return false
}

// SetIsCaseOf gets a reference to the given []Reference and assigns it to the IsCaseOf field.
func (o *ConceptDescription) SetIsCaseOf(v []Reference) {
	o.IsCaseOf = v
}

func (o ConceptDescription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Checksum != nil {
		toSerialize["checksum"] = o.Checksum
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.IdShort != nil {
		toSerialize["idShort"] = o.IdShort
	}
	if true {
		toSerialize["modelType"] = o.ModelType
	}
	if o.Administration != nil {
		toSerialize["administration"] = o.Administration
	}
	if true {
		toSerialize["identification"] = o.Identification
	}
	if o.EmbeddedDataSpecifications != nil {
		toSerialize["embeddedDataSpecifications"] = o.EmbeddedDataSpecifications
	}
	if o.IsCaseOf != nil {
		toSerialize["isCaseOf"] = o.IsCaseOf
	}
	return json.Marshal(toSerialize)
}

type NullableConceptDescription struct {
	value *ConceptDescription
	isSet bool
}

func (v NullableConceptDescription) Get() *ConceptDescription {
	return v.value
}

func (v *NullableConceptDescription) Set(val *ConceptDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableConceptDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableConceptDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConceptDescription(val *ConceptDescription) *NullableConceptDescription {
	return &NullableConceptDescription{value: val, isSet: true}
}

func (v NullableConceptDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConceptDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
