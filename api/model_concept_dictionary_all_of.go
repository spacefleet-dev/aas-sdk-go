/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ConceptDictionaryAllOf struct for ConceptDictionaryAllOf
type ConceptDictionaryAllOf struct {
	ConceptDescriptions []Reference `json:"conceptDescriptions,omitempty"`
}

// NewConceptDictionaryAllOf instantiates a new ConceptDictionaryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConceptDictionaryAllOf() *ConceptDictionaryAllOf {
	this := ConceptDictionaryAllOf{}
	return &this
}

// NewConceptDictionaryAllOfWithDefaults instantiates a new ConceptDictionaryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConceptDictionaryAllOfWithDefaults() *ConceptDictionaryAllOf {
	this := ConceptDictionaryAllOf{}
	return &this
}

// GetConceptDescriptions returns the ConceptDescriptions field value if set, zero value otherwise.
func (o *ConceptDictionaryAllOf) GetConceptDescriptions() []Reference {
	if o == nil || o.ConceptDescriptions == nil {
		var ret []Reference
		return ret
	}
	return o.ConceptDescriptions
}

// GetConceptDescriptionsOk returns a tuple with the ConceptDescriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptDictionaryAllOf) GetConceptDescriptionsOk() ([]Reference, bool) {
	if o == nil || o.ConceptDescriptions == nil {
		return nil, false
	}
	return o.ConceptDescriptions, true
}

// HasConceptDescriptions returns a boolean if a field has been set.
func (o *ConceptDictionaryAllOf) HasConceptDescriptions() bool {
	if o != nil && o.ConceptDescriptions != nil {
		return true
	}

	return false
}

// SetConceptDescriptions gets a reference to the given []Reference and assigns it to the ConceptDescriptions field.
func (o *ConceptDictionaryAllOf) SetConceptDescriptions(v []Reference) {
	o.ConceptDescriptions = v
}

func (o ConceptDictionaryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConceptDescriptions != nil {
		toSerialize["conceptDescriptions"] = o.ConceptDescriptions
	}
	return json.Marshal(toSerialize)
}

type NullableConceptDictionaryAllOf struct {
	value *ConceptDictionaryAllOf
	isSet bool
}

func (v NullableConceptDictionaryAllOf) Get() *ConceptDictionaryAllOf {
	return v.value
}

func (v *NullableConceptDictionaryAllOf) Set(val *ConceptDictionaryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConceptDictionaryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConceptDictionaryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConceptDictionaryAllOf(val *ConceptDictionaryAllOf) *NullableConceptDictionaryAllOf {
	return &NullableConceptDictionaryAllOf{value: val, isSet: true}
}

func (v NullableConceptDictionaryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConceptDictionaryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
