/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// EntityAllOf struct for EntityAllOf
type EntityAllOf struct {
	EntityType      EntityType        `json:"entityType"`
	GlobalAssetId   *Reference        `json:"globalAssetId,omitempty"`
	SpecificAssetId *SpecificAssetId  `json:"specificAssetId,omitempty"`
	Statements      []SubmodelElement `json:"statements,omitempty"`
}

// NewEntityAllOf instantiates a new EntityAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityAllOf(entityType EntityType) *EntityAllOf {
	this := EntityAllOf{}
	this.EntityType = entityType
	return &this
}

// NewEntityAllOfWithDefaults instantiates a new EntityAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityAllOfWithDefaults() *EntityAllOf {
	this := EntityAllOf{}
	return &this
}

// GetEntityType returns the EntityType field value
func (o *EntityAllOf) GetEntityType() EntityType {
	if o == nil {
		var ret EntityType
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *EntityAllOf) GetEntityTypeOk() (*EntityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *EntityAllOf) SetEntityType(v EntityType) {
	o.EntityType = v
}

// GetGlobalAssetId returns the GlobalAssetId field value if set, zero value otherwise.
func (o *EntityAllOf) GetGlobalAssetId() Reference {
	if o == nil || o.GlobalAssetId == nil {
		var ret Reference
		return ret
	}
	return *o.GlobalAssetId
}

// GetGlobalAssetIdOk returns a tuple with the GlobalAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAllOf) GetGlobalAssetIdOk() (*Reference, bool) {
	if o == nil || o.GlobalAssetId == nil {
		return nil, false
	}
	return o.GlobalAssetId, true
}

// HasGlobalAssetId returns a boolean if a field has been set.
func (o *EntityAllOf) HasGlobalAssetId() bool {
	if o != nil && o.GlobalAssetId != nil {
		return true
	}

	return false
}

// SetGlobalAssetId gets a reference to the given Reference and assigns it to the GlobalAssetId field.
func (o *EntityAllOf) SetGlobalAssetId(v Reference) {
	o.GlobalAssetId = &v
}

// GetSpecificAssetId returns the SpecificAssetId field value if set, zero value otherwise.
func (o *EntityAllOf) GetSpecificAssetId() SpecificAssetId {
	if o == nil || o.SpecificAssetId == nil {
		var ret SpecificAssetId
		return ret
	}
	return *o.SpecificAssetId
}

// GetSpecificAssetIdOk returns a tuple with the SpecificAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAllOf) GetSpecificAssetIdOk() (*SpecificAssetId, bool) {
	if o == nil || o.SpecificAssetId == nil {
		return nil, false
	}
	return o.SpecificAssetId, true
}

// HasSpecificAssetId returns a boolean if a field has been set.
func (o *EntityAllOf) HasSpecificAssetId() bool {
	if o != nil && o.SpecificAssetId != nil {
		return true
	}

	return false
}

// SetSpecificAssetId gets a reference to the given SpecificAssetId and assigns it to the SpecificAssetId field.
func (o *EntityAllOf) SetSpecificAssetId(v SpecificAssetId) {
	o.SpecificAssetId = &v
}

// GetStatements returns the Statements field value if set, zero value otherwise.
func (o *EntityAllOf) GetStatements() []SubmodelElement {
	if o == nil || o.Statements == nil {
		var ret []SubmodelElement
		return ret
	}
	return o.Statements
}

// GetStatementsOk returns a tuple with the Statements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAllOf) GetStatementsOk() ([]SubmodelElement, bool) {
	if o == nil || o.Statements == nil {
		return nil, false
	}
	return o.Statements, true
}

// HasStatements returns a boolean if a field has been set.
func (o *EntityAllOf) HasStatements() bool {
	if o != nil && o.Statements != nil {
		return true
	}

	return false
}

// SetStatements gets a reference to the given []SubmodelElement and assigns it to the Statements field.
func (o *EntityAllOf) SetStatements(v []SubmodelElement) {
	o.Statements = v
}

func (o EntityAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entityType"] = o.EntityType
	}
	if o.GlobalAssetId != nil {
		toSerialize["globalAssetId"] = o.GlobalAssetId
	}
	if o.SpecificAssetId != nil {
		toSerialize["specificAssetId"] = o.SpecificAssetId
	}
	if o.Statements != nil {
		toSerialize["statements"] = o.Statements
	}
	return json.Marshal(toSerialize)
}

type NullableEntityAllOf struct {
	value *EntityAllOf
	isSet bool
}

func (v NullableEntityAllOf) Get() *EntityAllOf {
	return v.value
}

func (v *NullableEntityAllOf) Set(val *EntityAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityAllOf(val *EntityAllOf) *NullableEntityAllOf {
	return &NullableEntityAllOf{value: val, isSet: true}
}

func (v NullableEntityAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
