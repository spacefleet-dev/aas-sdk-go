//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Environment struct for Environment
type Environment struct {
	AssetAdministrationShells []AssetAdministrationShell `json:"assetAdministrationShells,omitempty"`
	ConceptDescriptions       []ConceptDescription       `json:"conceptDescriptions,omitempty"`
	Submodels                 []Submodel                 `json:"submodels,omitempty"`
}

// NewEnvironment instantiates a new Environment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironment() *Environment {
	this := Environment{}
	return &this
}

// NewEnvironmentWithDefaults instantiates a new Environment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentWithDefaults() *Environment {
	this := Environment{}
	return &this
}

// GetAssetAdministrationShells returns the AssetAdministrationShells field value if set, zero value otherwise.
func (o *Environment) GetAssetAdministrationShells() []AssetAdministrationShell {
	if o == nil || o.AssetAdministrationShells == nil {
		var ret []AssetAdministrationShell
		return ret
	}
	return o.AssetAdministrationShells
}

// GetAssetAdministrationShellsOk returns a tuple with the AssetAdministrationShells field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetAssetAdministrationShellsOk() ([]AssetAdministrationShell, bool) {
	if o == nil || o.AssetAdministrationShells == nil {
		return nil, false
	}
	return o.AssetAdministrationShells, true
}

// HasAssetAdministrationShells returns a boolean if a field has been set.
func (o *Environment) HasAssetAdministrationShells() bool {
	if o != nil && o.AssetAdministrationShells != nil {
		return true
	}

	return false
}

// SetAssetAdministrationShells gets a reference to the given []AssetAdministrationShell and assigns it to the AssetAdministrationShells field.
func (o *Environment) SetAssetAdministrationShells(v []AssetAdministrationShell) {
	o.AssetAdministrationShells = v
}

// GetConceptDescriptions returns the ConceptDescriptions field value if set, zero value otherwise.
func (o *Environment) GetConceptDescriptions() []ConceptDescription {
	if o == nil || o.ConceptDescriptions == nil {
		var ret []ConceptDescription
		return ret
	}
	return o.ConceptDescriptions
}

// GetConceptDescriptionsOk returns a tuple with the ConceptDescriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetConceptDescriptionsOk() ([]ConceptDescription, bool) {
	if o == nil || o.ConceptDescriptions == nil {
		return nil, false
	}
	return o.ConceptDescriptions, true
}

// HasConceptDescriptions returns a boolean if a field has been set.
func (o *Environment) HasConceptDescriptions() bool {
	if o != nil && o.ConceptDescriptions != nil {
		return true
	}

	return false
}

// SetConceptDescriptions gets a reference to the given []ConceptDescription and assigns it to the ConceptDescriptions field.
func (o *Environment) SetConceptDescriptions(v []ConceptDescription) {
	o.ConceptDescriptions = v
}

// GetSubmodels returns the Submodels field value if set, zero value otherwise.
func (o *Environment) GetSubmodels() []Submodel {
	if o == nil || o.Submodels == nil {
		var ret []Submodel
		return ret
	}
	return o.Submodels
}

// GetSubmodelsOk returns a tuple with the Submodels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetSubmodelsOk() ([]Submodel, bool) {
	if o == nil || o.Submodels == nil {
		return nil, false
	}
	return o.Submodels, true
}

// HasSubmodels returns a boolean if a field has been set.
func (o *Environment) HasSubmodels() bool {
	if o != nil && o.Submodels != nil {
		return true
	}

	return false
}

// SetSubmodels gets a reference to the given []Submodel and assigns it to the Submodels field.
func (o *Environment) SetSubmodels(v []Submodel) {
	o.Submodels = v
}

func (o Environment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetAdministrationShells != nil {
		toSerialize["assetAdministrationShells"] = o.AssetAdministrationShells
	}
	if o.ConceptDescriptions != nil {
		toSerialize["conceptDescriptions"] = o.ConceptDescriptions
	}
	if o.Submodels != nil {
		toSerialize["submodels"] = o.Submodels
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironment struct {
	value *Environment
	isSet bool
}

func (v NullableEnvironment) Get() *Environment {
	return v.value
}

func (v *NullableEnvironment) Set(val *Environment) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironment(val *Environment) *NullableEnvironment {
	return &NullableEnvironment{value: val, isSet: true}
}

func (v NullableEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
