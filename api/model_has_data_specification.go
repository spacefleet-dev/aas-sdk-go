//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// HasDataSpecification struct for HasDataSpecification
type HasDataSpecification struct {
	EmbeddedDataSpecifications []EmbeddedDataSpecification `json:"embeddedDataSpecifications,omitempty"`
}

// NewHasDataSpecification instantiates a new HasDataSpecification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHasDataSpecification() *HasDataSpecification {
	this := HasDataSpecification{}
	return &this
}

// NewHasDataSpecificationWithDefaults instantiates a new HasDataSpecification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHasDataSpecificationWithDefaults() *HasDataSpecification {
	this := HasDataSpecification{}
	return &this
}

// GetEmbeddedDataSpecifications returns the EmbeddedDataSpecifications field value if set, zero value otherwise.
func (o *HasDataSpecification) GetEmbeddedDataSpecifications() []EmbeddedDataSpecification {
	if o == nil || o.EmbeddedDataSpecifications == nil {
		var ret []EmbeddedDataSpecification
		return ret
	}
	return o.EmbeddedDataSpecifications
}

// GetEmbeddedDataSpecificationsOk returns a tuple with the EmbeddedDataSpecifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HasDataSpecification) GetEmbeddedDataSpecificationsOk() ([]EmbeddedDataSpecification, bool) {
	if o == nil || o.EmbeddedDataSpecifications == nil {
		return nil, false
	}
	return o.EmbeddedDataSpecifications, true
}

// HasEmbeddedDataSpecifications returns a boolean if a field has been set.
func (o *HasDataSpecification) HasEmbeddedDataSpecifications() bool {
	if o != nil && o.EmbeddedDataSpecifications != nil {
		return true
	}

	return false
}

// SetEmbeddedDataSpecifications gets a reference to the given []EmbeddedDataSpecification and assigns it to the EmbeddedDataSpecifications field.
func (o *HasDataSpecification) SetEmbeddedDataSpecifications(v []EmbeddedDataSpecification) {
	o.EmbeddedDataSpecifications = v
}

func (o HasDataSpecification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmbeddedDataSpecifications != nil {
		toSerialize["embeddedDataSpecifications"] = o.EmbeddedDataSpecifications
	}
	return json.Marshal(toSerialize)
}

type NullableHasDataSpecification struct {
	value *HasDataSpecification
	isSet bool
}

func (v NullableHasDataSpecification) Get() *HasDataSpecification {
	return v.value
}

func (v *NullableHasDataSpecification) Set(val *HasDataSpecification) {
	v.value = val
	v.isSet = true
}

func (v NullableHasDataSpecification) IsSet() bool {
	return v.isSet
}

func (v *NullableHasDataSpecification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHasDataSpecification(val *HasDataSpecification) *NullableHasDataSpecification {
	return &NullableHasDataSpecification{value: val, isSet: true}
}

func (v NullableHasDataSpecification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHasDataSpecification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
