//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// IdentifiableAllOf struct for IdentifiableAllOf
type IdentifiableAllOf struct {
	Administration *AdministrativeInformation `json:"administration,omitempty"`
	Identification Identifier                 `json:"identification"`
}

// NewIdentifiableAllOf instantiates a new IdentifiableAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentifiableAllOf(identification Identifier) *IdentifiableAllOf {
	this := IdentifiableAllOf{}
	this.Identification = identification
	return &this
}

// NewIdentifiableAllOfWithDefaults instantiates a new IdentifiableAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentifiableAllOfWithDefaults() *IdentifiableAllOf {
	this := IdentifiableAllOf{}
	return &this
}

// GetAdministration returns the Administration field value if set, zero value otherwise.
func (o *IdentifiableAllOf) GetAdministration() AdministrativeInformation {
	if o == nil || o.Administration == nil {
		var ret AdministrativeInformation
		return ret
	}
	return *o.Administration
}

// GetAdministrationOk returns a tuple with the Administration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentifiableAllOf) GetAdministrationOk() (*AdministrativeInformation, bool) {
	if o == nil || o.Administration == nil {
		return nil, false
	}
	return o.Administration, true
}

// HasAdministration returns a boolean if a field has been set.
func (o *IdentifiableAllOf) HasAdministration() bool {
	if o != nil && o.Administration != nil {
		return true
	}

	return false
}

// SetAdministration gets a reference to the given AdministrativeInformation and assigns it to the Administration field.
func (o *IdentifiableAllOf) SetAdministration(v AdministrativeInformation) {
	o.Administration = &v
}

// GetIdentification returns the Identification field value
func (o *IdentifiableAllOf) GetIdentification() Identifier {
	if o == nil {
		var ret Identifier
		return ret
	}

	return o.Identification
}

// GetIdentificationOk returns a tuple with the Identification field value
// and a boolean to check if the value has been set.
func (o *IdentifiableAllOf) GetIdentificationOk() (*Identifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identification, true
}

// SetIdentification sets field value
func (o *IdentifiableAllOf) SetIdentification(v Identifier) {
	o.Identification = v
}

func (o IdentifiableAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Administration != nil {
		toSerialize["administration"] = o.Administration
	}
	if true {
		toSerialize["identification"] = o.Identification
	}
	return json.Marshal(toSerialize)
}

type NullableIdentifiableAllOf struct {
	value *IdentifiableAllOf
	isSet bool
}

func (v NullableIdentifiableAllOf) Get() *IdentifiableAllOf {
	return v.value
}

func (v *NullableIdentifiableAllOf) Set(val *IdentifiableAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentifiableAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentifiableAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentifiableAllOf(val *IdentifiableAllOf) *NullableIdentifiableAllOf {
	return &NullableIdentifiableAllOf{value: val, isSet: true}
}

func (v NullableIdentifiableAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentifiableAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
