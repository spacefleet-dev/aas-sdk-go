/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// InvocationRequest struct for InvocationRequest
type InvocationRequest struct {
	InoutputArguments []OperationVariable `json:"inoutputArguments,omitempty"`
	InputArguments    []OperationVariable `json:"inputArguments,omitempty"`
	RequestId         *string             `json:"requestId,omitempty"`
	Timeout           *int32              `json:"timeout,omitempty"`
}

// NewInvocationRequest instantiates a new InvocationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvocationRequest() *InvocationRequest {
	this := InvocationRequest{}
	return &this
}

// NewInvocationRequestWithDefaults instantiates a new InvocationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvocationRequestWithDefaults() *InvocationRequest {
	this := InvocationRequest{}
	return &this
}

// GetInoutputArguments returns the InoutputArguments field value if set, zero value otherwise.
func (o *InvocationRequest) GetInoutputArguments() []OperationVariable {
	if o == nil || o.InoutputArguments == nil {
		var ret []OperationVariable
		return ret
	}
	return o.InoutputArguments
}

// GetInoutputArgumentsOk returns a tuple with the InoutputArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvocationRequest) GetInoutputArgumentsOk() ([]OperationVariable, bool) {
	if o == nil || o.InoutputArguments == nil {
		return nil, false
	}
	return o.InoutputArguments, true
}

// HasInoutputArguments returns a boolean if a field has been set.
func (o *InvocationRequest) HasInoutputArguments() bool {
	if o != nil && o.InoutputArguments != nil {
		return true
	}

	return false
}

// SetInoutputArguments gets a reference to the given []OperationVariable and assigns it to the InoutputArguments field.
func (o *InvocationRequest) SetInoutputArguments(v []OperationVariable) {
	o.InoutputArguments = v
}

// GetInputArguments returns the InputArguments field value if set, zero value otherwise.
func (o *InvocationRequest) GetInputArguments() []OperationVariable {
	if o == nil || o.InputArguments == nil {
		var ret []OperationVariable
		return ret
	}
	return o.InputArguments
}

// GetInputArgumentsOk returns a tuple with the InputArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvocationRequest) GetInputArgumentsOk() ([]OperationVariable, bool) {
	if o == nil || o.InputArguments == nil {
		return nil, false
	}
	return o.InputArguments, true
}

// HasInputArguments returns a boolean if a field has been set.
func (o *InvocationRequest) HasInputArguments() bool {
	if o != nil && o.InputArguments != nil {
		return true
	}

	return false
}

// SetInputArguments gets a reference to the given []OperationVariable and assigns it to the InputArguments field.
func (o *InvocationRequest) SetInputArguments(v []OperationVariable) {
	o.InputArguments = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *InvocationRequest) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvocationRequest) GetRequestIdOk() (*string, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *InvocationRequest) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *InvocationRequest) SetRequestId(v string) {
	o.RequestId = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *InvocationRequest) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvocationRequest) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *InvocationRequest) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *InvocationRequest) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o InvocationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InoutputArguments != nil {
		toSerialize["inoutputArguments"] = o.InoutputArguments
	}
	if o.InputArguments != nil {
		toSerialize["inputArguments"] = o.InputArguments
	}
	if o.RequestId != nil {
		toSerialize["requestId"] = o.RequestId
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableInvocationRequest struct {
	value *InvocationRequest
	isSet bool
}

func (v NullableInvocationRequest) Get() *InvocationRequest {
	return v.value
}

func (v *NullableInvocationRequest) Set(val *InvocationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInvocationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInvocationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvocationRequest(val *InvocationRequest) *NullableInvocationRequest {
	return &NullableInvocationRequest{value: val, isSet: true}
}

func (v NullableInvocationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvocationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
