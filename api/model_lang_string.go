/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LangString struct for LangString
type LangString struct {
	Language string `json:"language"`
	Text     string `json:"text"`
}

// NewLangString instantiates a new LangString object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLangString(language string, text string) *LangString {
	this := LangString{}
	this.Language = language
	this.Text = text
	return &this
}

// NewLangStringWithDefaults instantiates a new LangString object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLangStringWithDefaults() *LangString {
	this := LangString{}
	return &this
}

// GetLanguage returns the Language field value
func (o *LangString) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *LangString) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *LangString) SetLanguage(v string) {
	o.Language = v
}

// GetText returns the Text field value
func (o *LangString) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *LangString) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *LangString) SetText(v string) {
	o.Text = v
}

func (o LangString) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["language"] = o.Language
	}
	if true {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableLangString struct {
	value *LangString
	isSet bool
}

func (v NullableLangString) Get() *LangString {
	return v.value
}

func (v *NullableLangString) Set(val *LangString) {
	v.value = val
	v.isSet = true
}

func (v NullableLangString) IsSet() bool {
	return v.isSet
}

func (v *NullableLangString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLangString(val *LangString) *NullableLangString {
	return &NullableLangString{value: val, isSet: true}
}

func (v NullableLangString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLangString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
