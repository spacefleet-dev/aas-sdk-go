//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// ModelingKind the model 'ModelingKind'
type ModelingKind string

// List of ModelingKind
const (
	MODELINGKIND_INSTANCE ModelingKind = "Instance"
	MODELINGKIND_TEMPLATE ModelingKind = "Template"
)

// All allowed values of ModelingKind enum
var AllowedModelingKindEnumValues = []ModelingKind{
	"Instance",
	"Template",
}

func (v *ModelingKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelingKind(value)
	for _, existing := range AllowedModelingKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelingKind", value)
}

// NewModelingKindFromValue returns a pointer to a valid ModelingKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelingKindFromValue(v string) (*ModelingKind, error) {
	ev := ModelingKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelingKind: valid values are %v", v, AllowedModelingKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelingKind) IsValid() bool {
	for _, existing := range AllowedModelingKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ModelingKind value
func (v ModelingKind) Ptr() *ModelingKind {
	return &v
}

type NullableModelingKind struct {
	value *ModelingKind
	isSet bool
}

func (v NullableModelingKind) Get() *ModelingKind {
	return v.value
}

func (v *NullableModelingKind) Set(val *ModelingKind) {
	v.value = val
	v.isSet = true
}

func (v NullableModelingKind) IsSet() bool {
	return v.isSet
}

func (v *NullableModelingKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelingKind(val *ModelingKind) *NullableModelingKind {
	return &NullableModelingKind{value: val, isSet: true}
}

func (v NullableModelingKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelingKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
