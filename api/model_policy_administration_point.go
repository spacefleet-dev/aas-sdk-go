//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PolicyAdministrationPoint struct for PolicyAdministrationPoint
type PolicyAdministrationPoint struct {
	ExternalAccessControl bool           `json:"externalAccessControl"`
	LocalAccessControl    *AccessControl `json:"localAccessControl,omitempty"`
}

// NewPolicyAdministrationPoint instantiates a new PolicyAdministrationPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyAdministrationPoint(externalAccessControl bool) *PolicyAdministrationPoint {
	this := PolicyAdministrationPoint{}
	this.ExternalAccessControl = externalAccessControl
	return &this
}

// NewPolicyAdministrationPointWithDefaults instantiates a new PolicyAdministrationPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyAdministrationPointWithDefaults() *PolicyAdministrationPoint {
	this := PolicyAdministrationPoint{}
	return &this
}

// GetExternalAccessControl returns the ExternalAccessControl field value
func (o *PolicyAdministrationPoint) GetExternalAccessControl() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExternalAccessControl
}

// GetExternalAccessControlOk returns a tuple with the ExternalAccessControl field value
// and a boolean to check if the value has been set.
func (o *PolicyAdministrationPoint) GetExternalAccessControlOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalAccessControl, true
}

// SetExternalAccessControl sets field value
func (o *PolicyAdministrationPoint) SetExternalAccessControl(v bool) {
	o.ExternalAccessControl = v
}

// GetLocalAccessControl returns the LocalAccessControl field value if set, zero value otherwise.
func (o *PolicyAdministrationPoint) GetLocalAccessControl() AccessControl {
	if o == nil || o.LocalAccessControl == nil {
		var ret AccessControl
		return ret
	}
	return *o.LocalAccessControl
}

// GetLocalAccessControlOk returns a tuple with the LocalAccessControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAdministrationPoint) GetLocalAccessControlOk() (*AccessControl, bool) {
	if o == nil || o.LocalAccessControl == nil {
		return nil, false
	}
	return o.LocalAccessControl, true
}

// HasLocalAccessControl returns a boolean if a field has been set.
func (o *PolicyAdministrationPoint) HasLocalAccessControl() bool {
	if o != nil && o.LocalAccessControl != nil {
		return true
	}

	return false
}

// SetLocalAccessControl gets a reference to the given AccessControl and assigns it to the LocalAccessControl field.
func (o *PolicyAdministrationPoint) SetLocalAccessControl(v AccessControl) {
	o.LocalAccessControl = &v
}

func (o PolicyAdministrationPoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["externalAccessControl"] = o.ExternalAccessControl
	}
	if o.LocalAccessControl != nil {
		toSerialize["localAccessControl"] = o.LocalAccessControl
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyAdministrationPoint struct {
	value *PolicyAdministrationPoint
	isSet bool
}

func (v NullablePolicyAdministrationPoint) Get() *PolicyAdministrationPoint {
	return v.value
}

func (v *NullablePolicyAdministrationPoint) Set(val *PolicyAdministrationPoint) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyAdministrationPoint) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyAdministrationPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyAdministrationPoint(val *PolicyAdministrationPoint) *NullablePolicyAdministrationPoint {
	return &NullablePolicyAdministrationPoint{value: val, isSet: true}
}

func (v NullablePolicyAdministrationPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyAdministrationPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
