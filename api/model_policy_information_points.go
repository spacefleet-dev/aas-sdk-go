/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PolicyInformationPoints struct for PolicyInformationPoints
type PolicyInformationPoints struct {
	ExternalInformationPoint bool        `json:"externalInformationPoint"`
	InternalInformationPoint []Reference `json:"internalInformationPoint,omitempty"`
}

// NewPolicyInformationPoints instantiates a new PolicyInformationPoints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyInformationPoints(externalInformationPoint bool) *PolicyInformationPoints {
	this := PolicyInformationPoints{}
	this.ExternalInformationPoint = externalInformationPoint
	return &this
}

// NewPolicyInformationPointsWithDefaults instantiates a new PolicyInformationPoints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyInformationPointsWithDefaults() *PolicyInformationPoints {
	this := PolicyInformationPoints{}
	return &this
}

// GetExternalInformationPoint returns the ExternalInformationPoint field value
func (o *PolicyInformationPoints) GetExternalInformationPoint() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExternalInformationPoint
}

// GetExternalInformationPointOk returns a tuple with the ExternalInformationPoint field value
// and a boolean to check if the value has been set.
func (o *PolicyInformationPoints) GetExternalInformationPointOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalInformationPoint, true
}

// SetExternalInformationPoint sets field value
func (o *PolicyInformationPoints) SetExternalInformationPoint(v bool) {
	o.ExternalInformationPoint = v
}

// GetInternalInformationPoint returns the InternalInformationPoint field value if set, zero value otherwise.
func (o *PolicyInformationPoints) GetInternalInformationPoint() []Reference {
	if o == nil || o.InternalInformationPoint == nil {
		var ret []Reference
		return ret
	}
	return o.InternalInformationPoint
}

// GetInternalInformationPointOk returns a tuple with the InternalInformationPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInformationPoints) GetInternalInformationPointOk() ([]Reference, bool) {
	if o == nil || o.InternalInformationPoint == nil {
		return nil, false
	}
	return o.InternalInformationPoint, true
}

// HasInternalInformationPoint returns a boolean if a field has been set.
func (o *PolicyInformationPoints) HasInternalInformationPoint() bool {
	if o != nil && o.InternalInformationPoint != nil {
		return true
	}

	return false
}

// SetInternalInformationPoint gets a reference to the given []Reference and assigns it to the InternalInformationPoint field.
func (o *PolicyInformationPoints) SetInternalInformationPoint(v []Reference) {
	o.InternalInformationPoint = v
}

func (o PolicyInformationPoints) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["externalInformationPoint"] = o.ExternalInformationPoint
	}
	if o.InternalInformationPoint != nil {
		toSerialize["internalInformationPoint"] = o.InternalInformationPoint
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyInformationPoints struct {
	value *PolicyInformationPoints
	isSet bool
}

func (v NullablePolicyInformationPoints) Get() *PolicyInformationPoints {
	return v.value
}

func (v *NullablePolicyInformationPoints) Set(val *PolicyInformationPoints) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyInformationPoints) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyInformationPoints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyInformationPoints(val *PolicyInformationPoints) *NullablePolicyInformationPoints {
	return &NullablePolicyInformationPoints{value: val, isSet: true}
}

func (v NullablePolicyInformationPoints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyInformationPoints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
