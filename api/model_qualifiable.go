//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Qualifiable struct for Qualifiable
type Qualifiable struct {
	ModelType  ModelType   `json:"modelType"`
	Qualifiers []Qualifier `json:"qualifiers,omitempty"`
}

// NewQualifiable instantiates a new Qualifiable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQualifiable(modelType ModelType) *Qualifiable {
	this := Qualifiable{}
	this.ModelType = modelType
	return &this
}

// NewQualifiableWithDefaults instantiates a new Qualifiable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQualifiableWithDefaults() *Qualifiable {
	this := Qualifiable{}
	return &this
}

// GetModelType returns the ModelType field value
func (o *Qualifiable) GetModelType() ModelType {
	if o == nil {
		var ret ModelType
		return ret
	}

	return o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value
// and a boolean to check if the value has been set.
func (o *Qualifiable) GetModelTypeOk() (*ModelType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelType, true
}

// SetModelType sets field value
func (o *Qualifiable) SetModelType(v ModelType) {
	o.ModelType = v
}

// GetQualifiers returns the Qualifiers field value if set, zero value otherwise.
func (o *Qualifiable) GetQualifiers() []Qualifier {
	if o == nil || o.Qualifiers == nil {
		var ret []Qualifier
		return ret
	}
	return o.Qualifiers
}

// GetQualifiersOk returns a tuple with the Qualifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Qualifiable) GetQualifiersOk() ([]Qualifier, bool) {
	if o == nil || o.Qualifiers == nil {
		return nil, false
	}
	return o.Qualifiers, true
}

// HasQualifiers returns a boolean if a field has been set.
func (o *Qualifiable) HasQualifiers() bool {
	if o != nil && o.Qualifiers != nil {
		return true
	}

	return false
}

// SetQualifiers gets a reference to the given []Qualifier and assigns it to the Qualifiers field.
func (o *Qualifiable) SetQualifiers(v []Qualifier) {
	o.Qualifiers = v
}

func (o Qualifiable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["modelType"] = o.ModelType
	}
	if o.Qualifiers != nil {
		toSerialize["qualifiers"] = o.Qualifiers
	}
	return json.Marshal(toSerialize)
}

type NullableQualifiable struct {
	value *Qualifiable
	isSet bool
}

func (v NullableQualifiable) Get() *Qualifiable {
	return v.value
}

func (v *NullableQualifiable) Set(val *Qualifiable) {
	v.value = val
	v.isSet = true
}

func (v NullableQualifiable) IsSet() bool {
	return v.isSet
}

func (v *NullableQualifiable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQualifiable(val *Qualifiable) *NullableQualifiable {
	return &NullableQualifiable{value: val, isSet: true}
}

func (v NullableQualifiable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQualifiable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
