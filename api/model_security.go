/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Security struct for Security
type Security struct {
	AccessControlPolicyPoints    AccessControlPolicyPoints  `json:"accessControlPolicyPoints"`
	Certificate                  []SecurityCertificateInner `json:"certificate,omitempty"`
	RequiredCertificateExtension []Reference                `json:"requiredCertificateExtension,omitempty"`
}

// NewSecurity instantiates a new Security object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurity(accessControlPolicyPoints AccessControlPolicyPoints) *Security {
	this := Security{}
	this.AccessControlPolicyPoints = accessControlPolicyPoints
	return &this
}

// NewSecurityWithDefaults instantiates a new Security object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityWithDefaults() *Security {
	this := Security{}
	return &this
}

// GetAccessControlPolicyPoints returns the AccessControlPolicyPoints field value
func (o *Security) GetAccessControlPolicyPoints() AccessControlPolicyPoints {
	if o == nil {
		var ret AccessControlPolicyPoints
		return ret
	}

	return o.AccessControlPolicyPoints
}

// GetAccessControlPolicyPointsOk returns a tuple with the AccessControlPolicyPoints field value
// and a boolean to check if the value has been set.
func (o *Security) GetAccessControlPolicyPointsOk() (*AccessControlPolicyPoints, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessControlPolicyPoints, true
}

// SetAccessControlPolicyPoints sets field value
func (o *Security) SetAccessControlPolicyPoints(v AccessControlPolicyPoints) {
	o.AccessControlPolicyPoints = v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *Security) GetCertificate() []SecurityCertificateInner {
	if o == nil || o.Certificate == nil {
		var ret []SecurityCertificateInner
		return ret
	}
	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetCertificateOk() ([]SecurityCertificateInner, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *Security) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given []SecurityCertificateInner and assigns it to the Certificate field.
func (o *Security) SetCertificate(v []SecurityCertificateInner) {
	o.Certificate = v
}

// GetRequiredCertificateExtension returns the RequiredCertificateExtension field value if set, zero value otherwise.
func (o *Security) GetRequiredCertificateExtension() []Reference {
	if o == nil || o.RequiredCertificateExtension == nil {
		var ret []Reference
		return ret
	}
	return o.RequiredCertificateExtension
}

// GetRequiredCertificateExtensionOk returns a tuple with the RequiredCertificateExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetRequiredCertificateExtensionOk() ([]Reference, bool) {
	if o == nil || o.RequiredCertificateExtension == nil {
		return nil, false
	}
	return o.RequiredCertificateExtension, true
}

// HasRequiredCertificateExtension returns a boolean if a field has been set.
func (o *Security) HasRequiredCertificateExtension() bool {
	if o != nil && o.RequiredCertificateExtension != nil {
		return true
	}

	return false
}

// SetRequiredCertificateExtension gets a reference to the given []Reference and assigns it to the RequiredCertificateExtension field.
func (o *Security) SetRequiredCertificateExtension(v []Reference) {
	o.RequiredCertificateExtension = v
}

func (o Security) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accessControlPolicyPoints"] = o.AccessControlPolicyPoints
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.RequiredCertificateExtension != nil {
		toSerialize["requiredCertificateExtension"] = o.RequiredCertificateExtension
	}
	return json.Marshal(toSerialize)
}

type NullableSecurity struct {
	value *Security
	isSet bool
}

func (v NullableSecurity) Get() *Security {
	return v.value
}

func (v *NullableSecurity) Set(val *Security) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurity) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurity(val *Security) *NullableSecurity {
	return &NullableSecurity{value: val, isSet: true}
}

func (v NullableSecurity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
