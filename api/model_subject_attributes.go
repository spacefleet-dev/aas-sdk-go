/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SubjectAttributes struct for SubjectAttributes
type SubjectAttributes struct {
	SubjectAttributes []Reference `json:"subjectAttributes,omitempty"`
}

// NewSubjectAttributes instantiates a new SubjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubjectAttributes() *SubjectAttributes {
	this := SubjectAttributes{}
	return &this
}

// NewSubjectAttributesWithDefaults instantiates a new SubjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubjectAttributesWithDefaults() *SubjectAttributes {
	this := SubjectAttributes{}
	return &this
}

// GetSubjectAttributes returns the SubjectAttributes field value if set, zero value otherwise.
func (o *SubjectAttributes) GetSubjectAttributes() []Reference {
	if o == nil || o.SubjectAttributes == nil {
		var ret []Reference
		return ret
	}
	return o.SubjectAttributes
}

// GetSubjectAttributesOk returns a tuple with the SubjectAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectAttributes) GetSubjectAttributesOk() ([]Reference, bool) {
	if o == nil || o.SubjectAttributes == nil {
		return nil, false
	}
	return o.SubjectAttributes, true
}

// HasSubjectAttributes returns a boolean if a field has been set.
func (o *SubjectAttributes) HasSubjectAttributes() bool {
	if o != nil && o.SubjectAttributes != nil {
		return true
	}

	return false
}

// SetSubjectAttributes gets a reference to the given []Reference and assigns it to the SubjectAttributes field.
func (o *SubjectAttributes) SetSubjectAttributes(v []Reference) {
	o.SubjectAttributes = v
}

func (o SubjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubjectAttributes != nil {
		toSerialize["subjectAttributes"] = o.SubjectAttributes
	}
	return json.Marshal(toSerialize)
}

type NullableSubjectAttributes struct {
	value *SubjectAttributes
	isSet bool
}

func (v NullableSubjectAttributes) Get() *SubjectAttributes {
	return v.value
}

func (v *NullableSubjectAttributes) Set(val *SubjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubjectAttributes(val *SubjectAttributes) *NullableSubjectAttributes {
	return &NullableSubjectAttributes{value: val, isSet: true}
}

func (v NullableSubjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
