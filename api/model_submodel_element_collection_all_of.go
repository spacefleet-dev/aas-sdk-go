/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SubmodelElementCollectionAllOf struct for SubmodelElementCollectionAllOf
type SubmodelElementCollectionAllOf struct {
	Value []ISubmodelElement `json:"value,omitempty"`
}

// NewSubmodelElementCollectionAllOf instantiates a new SubmodelElementCollectionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmodelElementCollectionAllOf() *SubmodelElementCollectionAllOf {
	this := SubmodelElementCollectionAllOf{}
	return &this
}

// NewSubmodelElementCollectionAllOfWithDefaults instantiates a new SubmodelElementCollectionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmodelElementCollectionAllOfWithDefaults() *SubmodelElementCollectionAllOf {
	this := SubmodelElementCollectionAllOf{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SubmodelElementCollectionAllOf) GetValue() []ISubmodelElement {
	if o == nil || o.Value == nil {
		var ret []ISubmodelElement
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmodelElementCollectionAllOf) GetValueOk() ([]ISubmodelElement, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SubmodelElementCollectionAllOf) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given []ISubmodelElement and assigns it to the Value field.
func (o *SubmodelElementCollectionAllOf) SetValue(v []ISubmodelElement) {
	o.Value = v
}

func (o SubmodelElementCollectionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSubmodelElementCollectionAllOf struct {
	value *SubmodelElementCollectionAllOf
	isSet bool
}

func (v NullableSubmodelElementCollectionAllOf) Get() *SubmodelElementCollectionAllOf {
	return v.value
}

func (v *NullableSubmodelElementCollectionAllOf) Set(val *SubmodelElementCollectionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmodelElementCollectionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmodelElementCollectionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmodelElementCollectionAllOf(val *SubmodelElementCollectionAllOf) *NullableSubmodelElementCollectionAllOf {
	return &NullableSubmodelElementCollectionAllOf{value: val, isSet: true}
}

func (v NullableSubmodelElementCollectionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmodelElementCollectionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
