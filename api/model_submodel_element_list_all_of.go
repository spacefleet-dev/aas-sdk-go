//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SubmodelElementListAllOf struct for SubmodelElementListAllOf
type SubmodelElementListAllOf struct {
	OrderRelevant         *bool               `json:"orderRelevant,omitempty"`
	SemanticIdListElement *Reference          `json:"semanticIdListElement,omitempty"`
	TypeValueListElement  AasSubmodelElements `json:"typeValueListElement"`
	Value                 []ISubmodelElement  `json:"value,omitempty"`
	ValueTypeListElement  *DataTypeDefXsd     `json:"valueTypeListElement,omitempty"`
}

// NewSubmodelElementListAllOf instantiates a new SubmodelElementListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmodelElementListAllOf(typeValueListElement AasSubmodelElements) *SubmodelElementListAllOf {
	this := SubmodelElementListAllOf{}
	this.TypeValueListElement = typeValueListElement
	return &this
}

// NewSubmodelElementListAllOfWithDefaults instantiates a new SubmodelElementListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmodelElementListAllOfWithDefaults() *SubmodelElementListAllOf {
	this := SubmodelElementListAllOf{}
	return &this
}

// GetOrderRelevant returns the OrderRelevant field value if set, zero value otherwise.
func (o *SubmodelElementListAllOf) GetOrderRelevant() bool {
	if o == nil || o.OrderRelevant == nil {
		var ret bool
		return ret
	}
	return *o.OrderRelevant
}

// GetOrderRelevantOk returns a tuple with the OrderRelevant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmodelElementListAllOf) GetOrderRelevantOk() (*bool, bool) {
	if o == nil || o.OrderRelevant == nil {
		return nil, false
	}
	return o.OrderRelevant, true
}

// HasOrderRelevant returns a boolean if a field has been set.
func (o *SubmodelElementListAllOf) HasOrderRelevant() bool {
	if o != nil && o.OrderRelevant != nil {
		return true
	}

	return false
}

// SetOrderRelevant gets a reference to the given bool and assigns it to the OrderRelevant field.
func (o *SubmodelElementListAllOf) SetOrderRelevant(v bool) {
	o.OrderRelevant = &v
}

// GetSemanticIdListElement returns the SemanticIdListElement field value if set, zero value otherwise.
func (o *SubmodelElementListAllOf) GetSemanticIdListElement() Reference {
	if o == nil || o.SemanticIdListElement == nil {
		var ret Reference
		return ret
	}
	return *o.SemanticIdListElement
}

// GetSemanticIdListElementOk returns a tuple with the SemanticIdListElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmodelElementListAllOf) GetSemanticIdListElementOk() (*Reference, bool) {
	if o == nil || o.SemanticIdListElement == nil {
		return nil, false
	}
	return o.SemanticIdListElement, true
}

// HasSemanticIdListElement returns a boolean if a field has been set.
func (o *SubmodelElementListAllOf) HasSemanticIdListElement() bool {
	if o != nil && o.SemanticIdListElement != nil {
		return true
	}

	return false
}

// SetSemanticIdListElement gets a reference to the given Reference and assigns it to the SemanticIdListElement field.
func (o *SubmodelElementListAllOf) SetSemanticIdListElement(v Reference) {
	o.SemanticIdListElement = &v
}

// GetTypeValueListElement returns the TypeValueListElement field value
func (o *SubmodelElementListAllOf) GetTypeValueListElement() AasSubmodelElements {
	if o == nil {
		var ret AasSubmodelElements
		return ret
	}

	return o.TypeValueListElement
}

// GetTypeValueListElementOk returns a tuple with the TypeValueListElement field value
// and a boolean to check if the value has been set.
func (o *SubmodelElementListAllOf) GetTypeValueListElementOk() (*AasSubmodelElements, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeValueListElement, true
}

// SetTypeValueListElement sets field value
func (o *SubmodelElementListAllOf) SetTypeValueListElement(v AasSubmodelElements) {
	o.TypeValueListElement = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SubmodelElementListAllOf) GetValue() []ISubmodelElement {
	if o == nil || o.Value == nil {
		var ret []ISubmodelElement
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmodelElementListAllOf) GetValueOk() ([]ISubmodelElement, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SubmodelElementListAllOf) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given []ISubmodelElement and assigns it to the Value field.
func (o *SubmodelElementListAllOf) SetValue(v []ISubmodelElement) {
	o.Value = v
}

// GetValueTypeListElement returns the ValueTypeListElement field value if set, zero value otherwise.
func (o *SubmodelElementListAllOf) GetValueTypeListElement() DataTypeDefXsd {
	if o == nil || o.ValueTypeListElement == nil {
		var ret DataTypeDefXsd
		return ret
	}
	return *o.ValueTypeListElement
}

// GetValueTypeListElementOk returns a tuple with the ValueTypeListElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmodelElementListAllOf) GetValueTypeListElementOk() (*DataTypeDefXsd, bool) {
	if o == nil || o.ValueTypeListElement == nil {
		return nil, false
	}
	return o.ValueTypeListElement, true
}

// HasValueTypeListElement returns a boolean if a field has been set.
func (o *SubmodelElementListAllOf) HasValueTypeListElement() bool {
	if o != nil && o.ValueTypeListElement != nil {
		return true
	}

	return false
}

// SetValueTypeListElement gets a reference to the given DataTypeDefXsd and assigns it to the ValueTypeListElement field.
func (o *SubmodelElementListAllOf) SetValueTypeListElement(v DataTypeDefXsd) {
	o.ValueTypeListElement = &v
}

func (o SubmodelElementListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderRelevant != nil {
		toSerialize["orderRelevant"] = o.OrderRelevant
	}
	if o.SemanticIdListElement != nil {
		toSerialize["semanticIdListElement"] = o.SemanticIdListElement
	}
	if true {
		toSerialize["typeValueListElement"] = o.TypeValueListElement
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ValueTypeListElement != nil {
		toSerialize["valueTypeListElement"] = o.ValueTypeListElement
	}
	return json.Marshal(toSerialize)
}

type NullableSubmodelElementListAllOf struct {
	value *SubmodelElementListAllOf
	isSet bool
}

func (v NullableSubmodelElementListAllOf) Get() *SubmodelElementListAllOf {
	return v.value
}

func (v *NullableSubmodelElementListAllOf) Set(val *SubmodelElementListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmodelElementListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmodelElementListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmodelElementListAllOf(val *SubmodelElementListAllOf) *NullableSubmodelElementListAllOf {
	return &NullableSubmodelElementListAllOf{value: val, isSet: true}
}

func (v NullableSubmodelElementListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmodelElementListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
