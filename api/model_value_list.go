//lint:file-ignore * Autogenerated code
/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ValueList struct for ValueList
type ValueList struct {
	ValueReferencePairs []ValueReferencePair `json:"valueReferencePairs"`
}

// NewValueList instantiates a new ValueList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueList(valueReferencePairs []ValueReferencePair) *ValueList {
	this := ValueList{}
	this.ValueReferencePairs = valueReferencePairs
	return &this
}

// NewValueListWithDefaults instantiates a new ValueList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueListWithDefaults() *ValueList {
	this := ValueList{}
	return &this
}

// GetValueReferencePairs returns the ValueReferencePairs field value
func (o *ValueList) GetValueReferencePairs() []ValueReferencePair {
	if o == nil {
		var ret []ValueReferencePair
		return ret
	}

	return o.ValueReferencePairs
}

// GetValueReferencePairsOk returns a tuple with the ValueReferencePairs field value
// and a boolean to check if the value has been set.
func (o *ValueList) GetValueReferencePairsOk() ([]ValueReferencePair, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueReferencePairs, true
}

// SetValueReferencePairs sets field value
func (o *ValueList) SetValueReferencePairs(v []ValueReferencePair) {
	o.ValueReferencePairs = v
}

func (o ValueList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["valueReferencePairs"] = o.ValueReferencePairs
	}
	return json.Marshal(toSerialize)
}

type NullableValueList struct {
	value *ValueList
	isSet bool
}

func (v NullableValueList) Get() *ValueList {
	return v.value
}

func (v *NullableValueList) Set(val *ValueList) {
	v.value = val
	v.isSet = true
}

func (v NullableValueList) IsSet() bool {
	return v.isSet
}

func (v *NullableValueList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueList(val *ValueList) *NullableValueList {
	return &NullableValueList{value: val, isSet: true}
}

func (v NullableValueList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
