/*
BaSyx Asset Administration Shell Repository HTTP REST-API

The full description of the generic BaSyx Asset Administration Shell Repository HTTP REST-API

API version: v1
Contact: constantin.ziesche@bosch.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ViewAllOf struct for ViewAllOf
type ViewAllOf struct {
	ContainedElements []Reference `json:"containedElements,omitempty"`
}

// NewViewAllOf instantiates a new ViewAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewAllOf() *ViewAllOf {
	this := ViewAllOf{}
	return &this
}

// NewViewAllOfWithDefaults instantiates a new ViewAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewAllOfWithDefaults() *ViewAllOf {
	this := ViewAllOf{}
	return &this
}

// GetContainedElements returns the ContainedElements field value if set, zero value otherwise.
func (o *ViewAllOf) GetContainedElements() []Reference {
	if o == nil || o.ContainedElements == nil {
		var ret []Reference
		return ret
	}
	return o.ContainedElements
}

// GetContainedElementsOk returns a tuple with the ContainedElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewAllOf) GetContainedElementsOk() ([]Reference, bool) {
	if o == nil || o.ContainedElements == nil {
		return nil, false
	}
	return o.ContainedElements, true
}

// HasContainedElements returns a boolean if a field has been set.
func (o *ViewAllOf) HasContainedElements() bool {
	if o != nil && o.ContainedElements != nil {
		return true
	}

	return false
}

// SetContainedElements gets a reference to the given []Reference and assigns it to the ContainedElements field.
func (o *ViewAllOf) SetContainedElements(v []Reference) {
	o.ContainedElements = v
}

func (o ViewAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainedElements != nil {
		toSerialize["containedElements"] = o.ContainedElements
	}
	return json.Marshal(toSerialize)
}

type NullableViewAllOf struct {
	value *ViewAllOf
	isSet bool
}

func (v NullableViewAllOf) Get() *ViewAllOf {
	return v.value
}

func (v *NullableViewAllOf) Set(val *ViewAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableViewAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableViewAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewAllOf(val *ViewAllOf) *NullableViewAllOf {
	return &NullableViewAllOf{value: val, isSet: true}
}

func (v NullableViewAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
